@page "/register"
@using System.ComponentModel.DataAnnotations;
@using ChatApp.Shared
@using Microsoft.AspNetCore.SignalR.Client

@inject NavigationManager NavigationManager;
@inject IJSRuntime JSRuntime ;

<h3>Register</h3>

<EditForm Model="user" OnValidSubmit="OnClickStartChat">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="form-group">
        <div class="row">
            <div class="col-md">
                <div class="col-form-label">First Name</div>
                <InputText class=form-control @bind-Value=user.FirstName></InputText>
            </div>
            <div class="col-md">
                <div class="col-form-label">Last Name</div>
                <InputText class=form-control @bind-Value=user.LastName></InputText>
            </div>
        </div>
        <div class="row"><div class="col-md"><div class="col-form-label">User Name</div> <InputText class=form-control @bind-Value=user.UserName></InputText></div></div>
        <br />

        <ValidationSummary>
        </ValidationSummary>


        <button class="btn mt-1 btn-primary" type="submit">Start Chat</button>
    </div>
</EditForm>

@code {
    User user = new();

    public async Task OnClickStartChat()
    {
        await JSRuntime.InvokeVoidAsync("localStorage.setItem", "userName", user.UserName);
        await JSRuntime.InvokeVoidAsync("localStorage.setItem", "firstName", user.FirstName);
        await JSRuntime.InvokeVoidAsync("localStorage.setItem", "lastName", user.LastName);
        var hubConnection = new HubConnectionBuilder().WithUrl(NavigationManager.BaseUri + "hubs/ChatHub").Build();
        await hubConnection.StartAsync();
        await hubConnection.SendAsync("SendUsername", user.UserName, hubConnection.ConnectionId);
        NavigationManager.NavigateTo("/chat");
    }

}
